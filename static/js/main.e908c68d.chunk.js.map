{"version":3,"sources":["components/Header.js","hooks/usePagination.js","components/Countries.js","App.js","index.js"],"names":["Header","title","className","usePagination","initialState","itemsPerPage","data","startFrom","useState","searching","setSearching","filteredData","setfilterData","perPage","pages","Math","ceil","length","pagination","currentPage","setCurrentPage","slice","slicedData","setSlicedData","useEffect","ellipsisLeft","ellipsisRight","i","push","id","current","ellipsis","prevPage","e","preventDefault","prevVal","nextPage","changePage","page","Countries","searchByData","search","setSearch","value","searchBy","setSearchBy","searchFor","setSearchFor","onSubmit","filtered","filter","country","searchKey","toLowerCase","includes","trim","style","justifyContent","onChange","target","map","index","key","label","type","placeholder","item","name","capital","iso2","currency","phone_code","href","onClick","App","countries","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAceA,EAZA,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChB,OACE,yBAAKC,UAAU,mCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAASD,O,OC0ElBE,EA/EO,SAACC,GAAkB,IAC/BC,EAAkCD,EAAlCC,aAAcC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,UADU,EAEJC,oBAAS,GAFL,mBAE/BC,EAF+B,KAEpBC,EAFoB,OAGAF,mBAASF,GAHT,mBAG/BK,EAH+B,KAGjBC,EAHiB,KAIhCC,EAAUR,GAA8B,GACxCS,EAAQC,KAAKC,KAAKV,EAAKW,OAASJ,GAChCK,EAAa,GANmB,EAOAV,mBAASD,GAAaO,EAAQP,EAAY,GAP1C,mBAO/BY,EAP+B,KAOlBC,EAPkB,OAQFZ,mBAAS,YAAIG,GAAcU,OAAOF,EAAc,GAAKN,EAASM,EAAcN,IAR1E,mBAQ/BS,EAR+B,KAQnBC,EARmB,KAUtCC,qBAAW,WACTD,EAAc,YAAIZ,GAAcU,OAAOF,EAAc,GAAKN,EAASM,EAAcN,IAC9EJ,IACDW,EAAe,GACfV,GAAa,MAEd,CAACC,EAAcQ,IAIlB,IAFA,IAAIM,GAAe,EACfC,GAAgB,EACZC,EAAI,EAAGA,GAAKb,EAAOa,IACtBA,IAAMR,EACPD,EAAWU,KACT,CAAEC,GAAIF,EAAGG,SAAS,EAAMC,UAAU,IAGjCJ,EAAI,GAAKA,EAAIb,EAAQ,GAAKa,IAAMR,EAAc,GAAKQ,IAAMR,EAAc,EACxED,EAAWU,KACT,CAAEC,GAAIF,EAAGG,SAAS,EAAOC,UAAU,IAE9BJ,EAAI,GAAKA,EAAIR,IAAgBM,GACpCP,EAAWU,KACT,CAAEC,GAAIF,EAAGG,SAAS,EAAOC,UAAU,IAErCN,GAAe,GACRE,EAAIb,GAASa,EAAIR,IAAgBO,IACxCR,EAAWU,KACT,CAAEC,GAAIF,EAAGG,SAAS,EAAOC,UAAU,IAErCL,GAAgB,GA6BtB,MAAO,CACLJ,aACAJ,aACAc,SAnBmB,SAACC,GACpBA,EAAEC,iBACFd,GAAe,SAAAe,GAAO,OAAIA,EAAU,IAAM,EAAIA,EAAUA,EAAU,KAC/C,IAAhBhB,GACDI,EAAc,YAAIjB,GAAMe,OAAOF,EAAc,GAAKN,GAAUM,EAAc,GAAKN,KAgBjFuB,SAZmB,SAACH,GACpBA,EAAEC,iBACFd,GAAe,SAAAe,GAAO,OAAIA,IAAYrB,EAAQqB,EAAUA,EAAU,KAC/DhB,IAAgBL,GACjBS,EAAc,YAAIjB,GAAMe,MAAMF,EAAcN,GAAUM,EAAc,GAAKN,KAS3EwB,WA7BiB,SAACC,EAAML,GACxBA,EAAEC,iBACCI,IAASnB,IACVC,EAAekB,GACff,EAAc,YAAIjB,GAAMe,OAAOiB,EAAO,GAAKzB,EAASyB,EAAOzB,MA0B7DD,gBACAF,iBC6BW6B,EAtGG,SAAC,GAAqD,IAAnDjC,EAAkD,EAAlDA,KAAMD,EAA4C,EAA5CA,aAAcE,EAA8B,EAA9BA,UAAYiC,EAAkB,EAAlBA,aAAkB,EAEzChC,mBAAS,IAFgC,mBAE9DiC,EAF8D,KAEtDC,EAFsD,OAGrClC,mBAASgC,GAAgBA,EAAavB,OAAS,EAAIuB,EAAa,GAAGG,MAAM,IAHpC,mBAG9DC,EAH8D,KAGpDC,EAHoD,OAInCrC,mBAAS,IAJ0B,mBAI9DsC,EAJ8D,KAInDC,EAJmD,OAK2B5C,EAAc,CAAEE,eAAcC,OAAMC,cAA5He,EAL6D,EAK7DA,WAAYJ,EALiD,EAKjDA,WAAYc,EALqC,EAKrCA,SAAUI,EAL2B,EAK3BA,SAAUC,EALiB,EAKjBA,WAAYzB,EALK,EAKLA,cAAeF,EALV,EAKUA,aAkB/E,OACE,yBAAKR,UAAY,YACf,2BAAO8C,SAlBS,SAACf,GACrBA,EAAEC,iBACJxB,GAAa,GACX,IACMuC,EADU,YAAO3C,GACK4C,QAAO,SAAAC,GACjC,IAAIC,EAAY,OAIhB,OAHGZ,GAAgBA,EAAavB,OAAS,IACvCmC,EAAYR,GAEPO,EAAQC,GAAWC,cAAcC,SAASb,EAAOc,OAAOF,kBAEjEzC,EAAcqC,GACdF,EAAaN,IAMyBvC,UAAY,oBAAoBsD,MAAO,CAACC,eAAgB,WAC/FjB,GAAgBA,EAAavB,OAAS,GACtC,yBAAKf,UAAY,eAClB,4BAAQyC,MAASC,EAAUc,SAAY,SAACzB,GAAD,OAAOY,EAAYZ,EAAE0B,OAAOhB,SAChEH,EAAaoB,KAAK,SAACtD,EAAMuD,GAAP,OACjB,4BAAQC,IAAOD,EAAOlB,MAAOrC,EAAKqC,OAAQrC,EAAKyD,YAKnD,yBAAK7D,UAAY,cACf,yBAAKA,UAAY,WACf,2BAAO8D,KAAO,OAAO9D,UAAY,QAAQ+D,YAAc,YAAYtB,MAASF,EAAQiB,SAAY,SAACzB,GAAD,OAChGS,EAAUT,EAAE0B,OAAOhB,YAGvB,4BAAQqB,KAAO,SAAS9D,UAAY,kBAApC,WAEM4C,GAAa,wBAAI5C,UAAY,oCAAhB,uBAAwE4C,EAAxE,KACbxB,EAAWL,OAAS,EACtB,kBAAC,WAAD,KACE,2BAAOf,UAAU,iCACf,+BACE,4BACE,uCACA,uCACA,oCACA,wCACA,4CAGJ,+BACGoB,EAAWsC,KAAI,SAAAM,GAAI,OAClB,wBAAIJ,IAAKI,EAAKrC,IACZ,4BAAKqC,EAAKC,MACV,4BAAKD,EAAKE,SACV,4BAAKF,EAAKG,MACV,4BAAKH,EAAKI,UACV,4BAAKJ,EAAKK,kBAKlB,yBAAKrE,UAAU,cACb,uBAAGsE,KAAK,KAAKtE,UAAU,sBAAsBuE,QAASzC,GAAtD,YACA,uBAAGwC,KAAK,KAAKtE,UAAU,kBAAkBuE,QAASrC,GAAlD,QACA,wBAAIlC,UAAU,mBACXgB,EAAW0C,KAAI,SAAAtB,GACZ,OAAIA,EAAKP,SAWA,wBAAI+B,IAAKxB,EAAKT,IAAI,0BAAM3B,UAAU,uBAAhB,WAVlB,wBAAI4D,IAAKxB,EAAKT,IACnB,uBACE2C,KAAK,KACLtE,UAAWoC,EAAKR,QAAU,6BAA+B,kBACzD2C,QAAS,SAACxC,GAAD,OAAOI,EAAWC,EAAKT,GAAII,KAEnCK,EAAKT,WAWtB,yBAAK3B,UAAY,mBACpB,yBAAKA,UAAY,kCAAjB,iBClEcwE,EAvBH,WAAM,MAEDlE,mBAASmE,GAAjBrE,EAFS,oBAIhB,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAQL,MAAM,kBACd,yBAAKC,UAAU,kBACb,kBAAC,EAAD,CAAWI,KAAMA,EAAQD,aAAc,GAAOmC,aAAgB,CAC3D,CAAEuB,MAAO,oBAAqBpB,MAAM,QACpC,CAAEoB,MAAO,oBAAqBpB,MAAM,WACpC,CAAEoB,MAAO,0BAA2BpB,MAAM,QAC1C,CAAEoB,MAAO,qBAAsBpB,MAAM,YACrC,CAAEoB,MAAO,uBAAwBpB,MAAM,iBAG1C,kBAAC,EAAD,CAAWrC,KAAMA,EAAMD,aAAc,EAAGE,UAAW,Q,MClB3DqE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e908c68d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = ({ title }) => {\r\n  return(\r\n    <div className=\"hero is-light has-text-centered\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container\">\r\n          <h1 className=\"title\">{title}</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import { useEffect, useState } from 'react';\r\n\r\nconst usePagination = (initialState) => {\r\n  const { itemsPerPage, data, startFrom } = initialState;\r\n  const [searching, setSearching] = useState(false)\r\n  const [filteredData, setfilterData] = useState(data)\r\n  const perPage = itemsPerPage ? itemsPerPage : 10;\r\n  const pages = Math.ceil(data.length / perPage);\r\n  const pagination = [];\r\n  const [currentPage, setCurrentPage] = useState(startFrom <= pages ? startFrom : 1);\r\n  const [slicedData, setSlicedData] = useState([...filteredData].slice((currentPage - 1) * perPage, currentPage * perPage));\r\n\r\n  useEffect( () => {\r\n    setSlicedData([...filteredData].slice((currentPage - 1) * perPage, currentPage * perPage))\r\n    if(searching) {\r\n      setCurrentPage(1)\r\n      setSearching(false)\r\n    }\r\n  }, [filteredData, currentPage])\r\n\r\n  let ellipsisLeft = false;\r\n  let ellipsisRight = false;\r\n  for(let i = 1; i <= pages; i++) {\r\n    if(i === currentPage) {\r\n      pagination.push(\r\n        { id: i, current: true, ellipsis: false }\r\n      );\r\n    }else {\r\n      if(i < 2 || i > pages - 1 || i === currentPage - 1 || i === currentPage + 1) {\r\n        pagination.push(\r\n          { id: i, current: false, ellipsis: false }\r\n        );\r\n      }else if(i > 1 && i < currentPage && !ellipsisLeft) {\r\n        pagination.push(\r\n          { id: i, current: false, ellipsis: true }\r\n        );\r\n        ellipsisLeft = true;\r\n      }else if(i < pages && i > currentPage && !ellipsisRight) {\r\n        pagination.push(\r\n          { id: i, current: false, ellipsis: true }\r\n        );\r\n        ellipsisRight = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  const changePage = (page, e) => {\r\n    e.preventDefault();\r\n    if(page !== currentPage) {\r\n      setCurrentPage(page);\r\n      setSlicedData([...data].slice((page - 1) * perPage, page * perPage));\r\n    }\r\n  }\r\n\r\n  const goToPrevPage = (e) => {\r\n    e.preventDefault();\r\n    setCurrentPage(prevVal => prevVal - 1 === 0 ? prevVal : prevVal - 1);\r\n    if(currentPage !== 1) {\r\n      setSlicedData([...data].slice((currentPage - 2) * perPage, (currentPage - 1) * perPage));\r\n    }\r\n  }\r\n\r\n  const goToNextPage = (e) => {\r\n    e.preventDefault();\r\n    setCurrentPage(prevVal => prevVal === pages ? prevVal : prevVal + 1);\r\n    if(currentPage !== pages) {\r\n      setSlicedData([...data].slice(currentPage * perPage, (currentPage + 1) * perPage));\r\n    }\r\n  }\r\n\r\n  return {\r\n    slicedData,\r\n    pagination,\r\n    prevPage: goToPrevPage,\r\n    nextPage: goToNextPage,\r\n    changePage,\r\n    setfilterData,\r\n    setSearching\r\n  }\r\n}\r\n\r\nexport default usePagination;","import React, { Fragment, useState } from 'react';\r\n\r\nimport usePagination from '../hooks/usePagination';\r\n\r\nconst Countries = ({ data, itemsPerPage, startFrom , searchByData}) => {\r\n  \r\n  const [search, setSearch] = useState('')\r\n  const [searchBy, setSearchBy] = useState(searchByData && searchByData.length > 0 ? searchByData[0].value:'')\r\n  const [searchFor, setSearchFor] = useState('')\r\n  const { slicedData, pagination, prevPage, nextPage, changePage, setfilterData, setSearching } = usePagination({ itemsPerPage, data, startFrom });\r\n\r\nconst submitHandler = (e) => {\r\n  e.preventDefault();\r\nsetSearching(true)\r\n  const copiedData = [...data]\r\n  const filtered = copiedData.filter(country => {\r\n    let searchKey = 'name'\r\n    if(searchByData && searchByData.length > 0) {\r\n      searchKey = searchBy\r\n    }\r\n    return country[searchKey].toLowerCase().includes(search.trim().toLowerCase())\r\n  })\r\n  setfilterData(filtered)\r\n  setSearchFor(search)\r\n}\r\n\r\n\r\n  return(\r\n    <div className = 'wrappper'>\r\n      <forms onSubmit = {submitHandler} className = 'mt-3 mb-3 is-flex' style={{justifyContent: 'center'}}>\r\n{searchByData && searchByData.length > 0 &&\r\n <div className = 'select mr-2'>\r\n<select value = {searchBy} onChange = {(e) => setSearchBy(e.target.value)}>\r\n  {searchByData.map( (data, index) => (\r\n    <option key = {index} value={data.value}>{data.label}</option>\r\n  ))}\r\n</select>\r\n</div>\r\n}\r\n<div className = 'field mr-2'>\r\n  <div className = 'control'>\r\n    <input type = 'text' className = 'input' placeholder = 'Search...' value = {search} onChange = {(e) => \r\n    setSearch(e.target.value)} />\r\n  </div>\r\n</div>\r\n<button type = 'submit' className = 'button is-link'>Search</button>\r\n      </forms>\r\n     {searchFor && <h2 className = 'mb-6 has-text-centered is-size-2'>Search result for: \"{searchFor}\"</h2>}\r\n    { slicedData.length > 0 ? \r\n    <Fragment>\r\n      <table className=\"table is-fullwidth is-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Country</th>\r\n            <th>Capital</th>\r\n            <th>Code</th>\r\n            <th>Currency</th>\r\n            <th>Phone Code</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {slicedData.map(item => (\r\n            <tr key={item.id}>\r\n              <td>{item.name}</td>\r\n              <td>{item.capital}</td>\r\n              <td>{item.iso2}</td>\r\n              <td>{item.currency}</td>\r\n              <td>{item.phone_code}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <nav className=\"pagination\">\r\n        <a href=\"/#\" className=\"pagination-previous\" onClick={prevPage}>Previous</a>\r\n        <a href=\"/#\" className=\"pagination-next\" onClick={nextPage}>Next</a>\r\n        <ul className=\"pagination-list\">\r\n          {pagination.map(page => {\r\n              if(!page.ellipsis) {\r\n                return <li key={page.id}>\r\n                  <a \r\n                    href=\"/#\"\r\n                    className={page.current ? 'pagination-link is-current' : 'pagination-link'}\r\n                    onClick={(e) => changePage(page.id, e)}\r\n                  >\r\n                    {page.id}\r\n                  </a>\r\n                </li>\r\n              }else {\r\n                return <li key={page.id}><span className=\"pagination-ellipsis\">&hellip;</span></li>\r\n              }\r\n          })}\r\n        </ul>\r\n      </nav>\r\n    </Fragment>\r\n    :\r\n    <div className = 'message is-link'>\r\n <div className = 'message-body has-text-centered'>\r\nNo results\r\n </div>\r\n    </div>\r\n\r\n}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Countries;","import React, { useState, Fragment } from 'react';\r\nimport './App.css';\r\n\r\nimport countries from './data/countries.json';\r\nimport Header from './components/Header';\r\nimport Countries from './components/Countries';\r\n\r\nconst App = () => {\r\n  debugger\r\n  const [data] = useState(countries);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header title=\"Testing work \" />\r\n      <div className=\"container px-2\">\r\n        <Countries data={data}   itemsPerPage={10}    searchByData = {[\r\n           { label: \"Select by country\", value:\"name\" },\r\n           { label: \"Select by capital\", value:\"capital\" },\r\n           { label: \"Select by country code \", value:\"iso2\" },\r\n           { label: \"Select by currency\", value:\"currency\" },\r\n           { label: \"Select by phone code\", value:\"phone code\" },\r\n         ]} \r\n        />\r\n        <Countries data={data} itemsPerPage={5} startFrom={15}  />\r\n\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport '../node_modules/bulma/css/bulma.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}